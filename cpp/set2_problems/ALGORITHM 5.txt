
int GenerateRandomNumber(int from, int to)
{
    int RandNumber = rand() % (to - from + 1) + from;

    return RandNumber;
}

void GenerateMatrixTable(int arri[3][3], short rows, short columns)
{
    for (int i = 0; i < columns; i++)
    {
        for (int j = 0; j < rows; j++)
        {
            arri[i][j] = GenerateRandomNumber(1, 100);
        }
    }
}

void PrintMatrixTable(int arri[3][3], short rows, short columns)
{
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < columns; j++)
        {
            cout << setw(3) << arri[i][j] << "         ";
        }
        cout << endl;
    }
}

int SumOfColumnsInMatrix(int arri[3][3], short ColNumber, short rows)
{
    int sum = 0;
    for (int j = 0; j < rows; j++)
    {
        sum += arri[j][ColNumber];
    }

    return sum;
}

void SumOfColumnsInOneArray(int arri2[3], int arri[3][3], short rows, short columns)
{
    for (int i = 0; i < columns; i++)
    {
        arri2[i] = SumOfColumnsInMatrix(arri, i, rows);
    }
}

void PrintSumOfColumnsInMatrix(int arri2[3], short columns)
{
    for (int i = 0; i < columns; i++)
    {
        cout << "Columns " << i + 1 << " Sum = " << arri2[i] << endl;
    }
}

int main()
{
    srand((unsigned)time(NULL));

    int arri[3][3];
    int arri2[3];
    GenerateMatrixTable(arri, 3, 3);

    cout << "The following is a 3x3 matrix:\n";
    PrintMatrixTable(arri, 3, 3);

    SumOfColumnsInOneArray(arri2, arri, 3, 3);

    cout << "\nThe following are the sum of each row in the matrix:\n";
    PrintSumOfColumnsInMatrix(arri2, 3);


    return 0;  
}



