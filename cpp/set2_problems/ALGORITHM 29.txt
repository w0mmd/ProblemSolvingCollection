

string ReadText()
{
    string Message;

    cout << "Please enter your character:\n";
    getline(cin, Message);

    return Message;
}

int CountCapitalLetters (string Text)
{
    int Counter = 0;

    for (short i = 0; i < Text.length(); i++)
    {
        if (isupper(Text[i]))
        {
            Counter++;
        }
    }
    return Counter;
 }

int CountSmallLetters (string Text)
{
    int Counter = 0;

    for (short i = 0; i < Text.length(); i++)
    {
        if (islower(Text[i]))
        {
            Counter++;
        }
    }
    return Counter;
 }

int main()
{
    string Text = ReadText();

    cout << "String Length: " << Text.length() << endl;
    cout << "Capital Letter Count: " << CountCapitalLetters(Text) << endl;
    cout << "Small Letter Count: " << CountSmallLetters(Text) << endl;

    return 0;  
}
============================================


using namespace std;

enum enWhatToCount {
    SmallLetters = 0, CapitalLetters = 1, All = 3
};

string ReadText()
{
    string Message;

    cout << "Please enter your character:\n";
    getline(cin, Message);

    return Message;
}

short CountLetters(string Text, enWhatToCount WhatToCount = enWhatToCount::All)
{
    if (WhatToCount == enWhatToCount::All)
    {
        return Text.length();
    }


    short Counter = 0;

    for (short i = 0; i < Text.length(); i++)
    {
        if (WhatToCount == enWhatToCount::CapitalLetters && isupper(Text[i]))
        {
            Counter++;
        }
        else if (WhatToCount == enWhatToCount::SmallLetters && islower(Text[i]))
        {
            Counter++;
        }
    }

    return Counter;
}

int main()
{
    string Text = ReadText();

    cout << "String Length: " << CountLetters(Text) << endl;
    cout << "Capital Letter Count: " << CountLetters(Text, enWhatToCount::CapitalLetters) << endl;
    cout << "Small Letter Count: " << CountLetters(Text, enWhatToCount::SmallLetters) << endl;

    return 0;  
}







