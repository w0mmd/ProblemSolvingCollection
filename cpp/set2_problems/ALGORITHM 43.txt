using namespace std;

string LowerString(const string& str)
{
    string LowerString = str;

    for (char& n : LowerString)
    {
        n = tolower(n);
    }

    return LowerString;

}

string ReplaceStringCaseSensitive(string S1, string ToFind, string ToReplace)
{
    int Pos = 0;

    
        while ((Pos = S1.find(ToFind)) != std::string::npos)
        {
            S1.erase(Pos, ToFind.length());
            S1.insert(Pos, ToReplace);
            Pos += ToReplace.length();
        }
    
        return S1;
}

string ReplaceStringNotCaseSensitive(string S1, string ToFind, string ToReplace)
{
    int Pos = 0;
    string LowerToFind = LowerString(ToFind);
    string LowerS1 = LowerString(S1);

  

        while ((Pos = LowerS1.find(LowerToFind, 0)) != std::string::npos)
        {
            S1.erase(Pos, LowerToFind.length());
            S1.insert(Pos, ToReplace);

            LowerS1.erase(Pos, LowerToFind.length());
            LowerS1.insert(Pos, ToReplace.length(), ' ');

            Pos += ToReplace.length();


        }

    
        return S1;
}

int main()
{
    string S1 = "Welcome to Jordan, Jordan is a nice country.";
    cout << S1 << endl;

    cout << "\nReplaced string with match case:\n\n";
    cout << ReplaceStringCaseSensitive(S1, "jordan", "USA") << endl;
    
    cout << "\nReplaced string without match case:\n\n";
    cout << ReplaceStringNotCaseSensitive(S1, "jordan", "USA");

    return 0;  
}

==========================================================



using namespace std;

vector<string> SplitString(string S1, string Delim)
{
    vector<string> vString;
    short pos = 0;
    string sWord; 

    while ((pos = S1.find(Delim)) != std::string::npos)
    {
        sWord = S1.substr(0, pos); 
        if (sWord != "")
        {
            vString.push_back(sWord);
        }
        S1.erase(0, pos + Delim.length());
    }
    if (S1 != "")
    {
        vString.push_back(S1); 
    }
    return vString;
}

string JoinString(vector<string> vString, string Delim)
{
    string S1;
    for (string& s : vString)
    {
        S1 = S1 + s + Delim;
    }
    return S1.substr(0, S1.length() - Delim.length());
}

string LowerAllString(string S1)
{
    for (short i = 0; i < S1.length(); i++)
    {
        S1[i] = tolower(S1[i]);
    }
    return S1;
}

string ReplaceString(string S1, string ToFind, string ToReplace, bool MatchCase = true)
{
    vector<string> vString = SplitString(S1, " ");

    for (string& s : vString)
    {
        if (MatchCase)
        {
            if (s == ToFind)
            {
                s = ToReplace;
            }
        }
        else {
            if (LowerAllString(s) == LowerAllString(ToFind))
            {
                s = ToReplace;
            }
        }
    }

        return JoinString(vString, " ");
}


int main()
{
    string S1 = "Welcome to Jordan, Jordan is a nice country.";
    cout << S1 << endl;

    cout << "\nReplaced string with match case:\n\n";
    cout << ReplaceString(S1, "jordan", "USA") << endl;
    
    cout << "\nReplaced string without match case:\n\n";
    cout << ReplaceString(S1, "jordan", "USA", false);

    return 0;  
}







