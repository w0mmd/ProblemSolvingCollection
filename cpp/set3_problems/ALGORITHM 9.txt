
using namespace std;

bool IsLeapYear(short Year)
{

   return (Year % 400 == 0) || ((Year % 4 == 0) && (Year % 100 != 0));
      
}

short DayOfWeekOrder(short Day, short Month, short Year)
{
    short a = (14 - Month) / 12;
    short y = Year - a;
    short m = Month + 12 * a - 2;
    short DayOfWeek = (Day + y + (y / 4) - (y / 100) + (y / 400) + (31 * m) / 12) % 7;
    return (DayOfWeek + 6) % 7;
}

short NumberOfDaysInMonth(short Year, short Month)
{

    if (Month < 1 || Month > 12)
    {
        return 0;
    }

    int NumberOfDays[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };

    return (Month == 2) ? (IsLeapYear(Year) ? 29 : 28) : NumberOfDays[Month - 1];
}

string GetMonthName(short Month)
{
    string MonthNames[12] = { "January", "February", "March", "April", "May", "June",
                  "July", "August", "September", "October", "November", "December" };

    return (Month >= 1 && Month <= 12) ? MonthNames[Month - 1] : "Unknown";
}

void PrintMonthCalendar(short Month, short Year)
{
    int Current = DayOfWeekOrder(1, Month, Year);
    int NumberOfDays = NumberOfDaysInMonth(Year, Month);

    printf("\n-----------------%s----------------\n\n",
        GetMonthName(Month).c_str());
    printf("  Sun  Mon  Tue  Wed  Thu  Fri  Sat\n");

    int i;
    for (i = 0; i < Current; i++)
    {
        printf("     ");
    }

    for (int j = 1; j <= NumberOfDays; j++)
    {
        printf("%5d", j);


        if (++i == 7)
        {
            i = 0;
            printf("\n");
        }
    }

    printf("\n----------------------------------------\n");

}

void PrintYearCalendar(short Year)
{
    printf("--------------------------------------------\n");
    printf("%23d", Year);
    printf("\n--------------------------------------------\n");

    for (int i = 1; i <= 12; i++)
    {
        PrintMonthCalendar(i, Year);
    }

    return;
}

short ReadYear()
{
    short Year = 0;

    cout << "Enter a year?\n";
    cin >> Year;

    return Year;

}

int main() 
{
    short Year = ReadYear();

    PrintYearCalendar(Year);


    system("pause>0");
    return 0;
}
