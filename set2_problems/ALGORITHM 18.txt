
void PrintMatrix(int arri[3][3], short rows, short columns)
{
    for (int i = 0; i <= rows - 1; i++)
    {
        for (int j = 0; j <= columns - 1; j++)
        {
            cout << setfill('0') << setw(2) << arri[i][j] << "       ";
        }
        cout << endl;
    }

}

bool CheckNumberInMatrix(int arri[3][3], short rows, short columns, int Number)
{

    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < columns; j++)
        {
            if (arri[i][j] == Number)
            {
                return true;
            }
        }
    }
    return false;
}

void CheckIntersectedNumbers(int arri[3][3], int arri2[3][3], short rows, short columns)
{
    short RepeatedNumber = 0;

    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < columns; j++)
        {
            RepeatedNumber = arri[i][j];

            if (CheckNumberInMatrix(arri2, rows, columns, RepeatedNumber))
            {
                cout << setw(2) << RepeatedNumber << "       ";
            }
        }
    }
}

int main()
{

    int arri[3][3] = { {77,5,12},{22,20,1},{1,0,9} };
    int arri2[3][3] = { {5,80,90},{22,77,1},{10,8,33} };

    cout << "Matrix1:\n";
    PrintMatrix(arri, 3, 3);

    cout << endl;

    cout << "Matrix2:\n";
    PrintMatrix(arri2, 3, 3);
    
    cout << endl;

    cout << "Intersected nmbers are:\n";
    CheckIntersectedNumbers(arri, arri2, 3, 3);

    return 0;  
}





