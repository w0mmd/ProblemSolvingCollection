using namespace std;


string ReadString()
{
    string Text;

    cout << "Please enter your text?\n";
    getline(cin, Text);

    return Text;
}

string TrimLeft(string Text, string Delim)
{

   
        while (Text.find(Delim) == 0)
        {
            
                Text.erase(0, Delim.length());
            
        }

        return Text;
}

string TrimRight(string Text, string Delim)
{

   
        while (Text.rfind(Delim) == Text.length() - Delim.length())
        {
            
                Text.erase(Text.length() - Delim.length(), Delim.length());
            
        }
        return Text;
}


int main()
{
    string Text = ReadString();

    cout << "Trim Left: " << TrimLeft(Text, " ") << endl;
    cout << "Trim Right: " << TrimRight(Text, " ") << endl;

    cout << TrimLeft(TrimRight(Text, " ")," ");
    return 0;  
}

=====================================================
using namespace std;


string ReadString()
{
    string Text;

    cout << "Please enter your text?\n";
    getline(cin, Text);

    return Text;
}

string TrimLeft(string Text)
{
    for (short i = 0; i < Text.length(); i++)
    {
        if (Text[i] != ' ')
        {
            return Text.substr(i, Text.length() - 1);
        }
    }
   
       
    return "";
}

string TrimRight(string Text)
{

    for (short i = Text.length() - 1; i >= 0; i--)
    {
        if (Text[i] != ' ')
        {
            return Text.substr(0, i + 1);
        }

    }
   
    return "";
        
}

string TrimString(string Text)
{
    return TrimLeft(TrimRight(Text));
}

int main()
{
    string Text = ReadString();

    cout << "Trim Left: " << TrimLeft(Text) << endl;
    cout << "Trim Right: " << TrimRight(Text) << endl;

    cout << "Trim from two sides: " << TrimString(Text) << endl;


    return 0;  
}
