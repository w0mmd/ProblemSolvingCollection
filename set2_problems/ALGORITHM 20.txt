

void PrintMatrix(int arri[3][3], short rows, short columns)
{
    for (int i = 0; i <= rows - 1; i++)
    {
        for (int j = 0; j <= columns - 1; j++)
        {
            cout << setfill('0') << setw(2) << arri[i][j] << "       ";
        }
        cout << endl;
    }

}

bool IsPalindrome(int Number)
{
    int Original = Number;
    int Reversed = 0;

    while (Number > 0)
    {
        Reversed = Reversed * 10 + Number % 10;
        Number /= 10;
    }

    return Original == Reversed;
}

bool CheckPalindromeNumberInMatrix(int arri[3][3], short rows, short columns)
{
    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < columns; j++)
        {
            if (!IsPalindrome(arri[i][j]))
            {
                return false;
            }
           
        }
    }
    return true;
}

int main()
{

    int arri[3][3] = { {1,2,1},{5,5,5},{7,3,7} };

    cout << "Matrix1:\n";
    PrintMatrix(arri, 3, 3);

    cout << endl;

    if (CheckPalindromeNumberInMatrix(arri, 3, 3))
    {
        cout << "Yes, matrix is palindrome.\n";
    }
    else {
        cout << "No, matrix is not palindrome.\n";
    }

    return 0;  
}


=====================================================





void PrintMatrix(int arri[3][3], short rows, short columns)
{
    for (int i = 0; i <= rows - 1; i++)
    {
        for (int j = 0; j <= columns - 1; j++)
        {
            cout << setfill('0') << setw(2) << arri[i][j] << "       ";
        }
        cout << endl;
    }

}

bool CheckPalindromeNumberInMatrix(int arri[3][3], short rows, short columns)
{
    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < columns / 2; j++)
        {
            if (arri[i][j] != arri[i][columns - 1 - j])
            {
                return false;
           }
           
        }
    }
    return true;
}

int main()
{

    int arri[3][3] = { {1,2,1},{5,5,5},{7,3,7} };

    cout << "Matrix1:\n";
    PrintMatrix(arri, 3, 3);

    cout << endl;

    if (CheckPalindromeNumberInMatrix(arri, 3, 3))
    {
        cout << "Yes, matrix is palindrome.\n";
    }
    else {
        cout << "No, matrix is not palindrome.\n";
    }

    return 0;  
}








